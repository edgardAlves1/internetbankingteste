package com.santander.ib.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.santander.ib.domain.entity.Customer;
import com.santander.ib.exception.BusinessException;
import com.santander.ib.repository.CustomerRepository;

import lombok.RequiredArgsConstructor;

@Service
@Transactional
@RequiredArgsConstructor
public class CustomerServiceImpl implements CustomerService{
	
	@Autowired
	private CustomerRepository customerRepository;

	@Override
	public List<Customer> listAll() {
		return customerRepository.findAll();
	}
	
	@Override
	public Optional<Customer> getCustomerById(Long id) {
		return customerRepository.findById(id);
	}

	@Override
    public Customer editCustomer(Long customerId, Customer customerRequest) {
        Optional<Customer> optCustomer = this.getCustomerById(customerId);

        if (optCustomer.isEmpty()) {
            throw new BusinessException("Cliente não encontrado na base");
        }

        customerRequest.setId(customerId);

        return salvar(paciente);
    }
	
	public Paciente save(Customer customer) {
        boolean accountAlreadyRegistered = false;

        Optional<Customer> optPaciente = customerRepository.findById(customer.getId());

        if (optPaciente.isPresent()) {
            if (!optPaciente.get().getId().equals(paciente.getId())) {
                existeCpf = true;
            }
        }

        if (existeCpf) {
            throw new BusinessException("Cpf já cadastrado!");
        }

        return repository.save(paciente);
    }

}
